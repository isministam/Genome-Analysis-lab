debugSource('~/GitHub/Genome-Analysis-lab/Diff_ex/DESeq2.R', echo=TRUE)
# DESeq2Report(dds, project = "", intgroup, colors = NULL, res = NULL,
source('~/GitHub/Genome-Analysis-lab/Diff_ex/DESeq2.R', echo=TRUE)
source('~/GitHub/Genome-Analysis-lab/Diff_ex/DESeq2.R', echo=TRUE)
source('~/GitHub/Genome-Analysis-lab/Diff_ex/DESeq2.R', echo=TRUE)
mat =assay(rld)[ head(order(res$log2FoldChange), 20),] # select the top 30 genes with the lowest padj
mat = mat - rowMeans(mat) # Subtract the row means from each value
# Optional, but to make the plot nicer:
df = as.data.frame(colData(rld)[,c("condition")]) # Create a dataframe with a column of the conditioncolnames(df) = "condition" # Rename the column header
rownames(df) = colnames(mat) # add rownames
# and plot the actual heatmap
pheatmap(mat, annotation_col=df)
mat =assay(rld)[ head(order(res$log2FoldChange), 20),] # select the top 30 genes with the lowest padj
mat = mat - rowMeans(mat) # Subtract the row means from each value
# Optional, but to make the plot nicer:
df = as.data.frame(colData(rld)[,c("condition")]) # Create a dataframe with a column of the conditioncolnames(df) = "condition" # Rename the column header
rownames(df) = colnames(mat) # add rownames
# and plot the actual heatmap
pheatmap(mat, annotation_col=df)
sampleFiles<- list.files(directory)
directory <- "C:/Users/Ismini/Documents/GitHub/Genome-Analysis-lab/Diff_ex/files"
sampleFiles<- list.files(directory)
sampleFiles
Files<- c("Serum_1", "Serum_2", "Serum_3","BH_1","BH_2","BH_3")
sampleCondition <- c("Serum_1", "Serum_2", "Serum_3","BH_1","BH_2","BH_3")
sampleTable <- data.frame(sampleName = Files,
fileName = sampleFiles,
condition = sampleCondition)
sampleTable
ddsHTSeq <- DESeqDataSetFromHTSeqCount(sampleTable = sampleTable,
directory = directory,
design= ~ condition)
ddsHTSeq<- ddsHTSeq[-(1:1436), , drop = FALSE]
keep <- rowSums(counts(ddsHTSeq)) >= 10
ddsHTSeq <- ddsHTSeq[keep,]
library("pheatmap")
library('DESeq')
library('DESeq2')
directory <- "C:/Users/Ismini/Documents/GitHub/Genome-Analysis-lab/Diff_ex/files"
sampleFiles<- list.files(directory)
sampleFiles
Files<- c("Serum_1", "Serum_2", "Serum_3","BH_1","BH_2","BH_3")
sampleCondition <- c("Serum_1", "Serum_2", "Serum_3","BH_1","BH_2","BH_3")
sampleTable <- data.frame(sampleName = Files,
fileName = sampleFiles,
condition = sampleCondition)
sampleTable
ddsHTSeq <- DESeqDataSetFromHTSeqCount(sampleTable = sampleTable,
directory = directory,
design= ~ condition)
mat =assay(rld)[ head(order(res$log2FoldChange), 20),] # select the top 30 genes with the lowest padj
mat = mat - rowMeans(mat) # Subtract the row means from each value
# Optional, but to make the plot nicer:
df = as.data.frame(colData(rld)[,c("condition")]) # Create a dataframe with a column of the conditioncolnames(df) = "condition" # Rename the column header
rownames(df) = colnames(mat) # add rownames
# and plot the actual heatmap
pheatmap(mat, annotation_col=df)
heatmap(mat, scale="column", col = terrain.colors(256))
heatmap(mat, scale="column", col = cm.colors(256))
library(plotly)
library('plotly')
heatmap.2(mat, breaks = seq(-1.5, 1.5, 0.3),
key.xtickfun = function(){breaks <- parent.frame()$breaks
return(list(at = parent.frame()$scale01(seq(-1.5,1.5,0.5)),
labels = c("< -1.5", as.character(seq(-1,1,0.5)), "> 1.5")))},)
# Optional, but to make the plot nicer:
df = as.data.frame(colData(rld)[, c("Serum_1", "Serum_2", "Serum_3","BH_1","BH_2","BH_3")]) # Create a dataframe with a column of the conditioncolnames(df) = "condition" # Rename the column header
mat =assay(rld)[ head(order(res$log2FoldChange), 20),] # select the top 30 genes with the lowest padj
mat = mat - rowMeans(mat) # Subtract the row means from each value
# Optional, but to make the plot nicer:
df = as.data.frame(colData(rld)[, c("Serum_1", "Serum_2", "Serum_3","BH_1","BH_2","BH_3")]) # Create a dataframe with a column of the conditioncolnames(df) = "condition" # Rename the column header
# Optional, but to make the plot nicer:
df = as.data.frame(colData(rld)[, c("Serum","BH")]) # Create a dataframe with a column of the conditioncolnames(df) = "condition" # Rename the column header
# Optional, but to make the plot nicer:
df = as.data.frame(colData(rld)[, c("Serum")]) # Create a dataframe with a column of the conditioncolnames(df) = "condition" # Rename the column header
# Optional, but to make the plot nicer:
df = as.data.frame(colData(rld)[, c("condition")]) # Create a dataframe with a column of the conditioncolnames(df) = "condition" # Rename the column header
rownames(df) = colnames(mat) # add rownames
# and plot the actual heatmap
pheatmap(mat, annotation_col=df)
rld <- rlog(dds, blind=FALSE)
res<- match(res,row.names(rld))
mat =assay(rld)[ head(order(res$log2FoldChange), 20),] # select the top 30 genes with the lowest padj
mat = mat - rowMeans(mat) # Subtract the row means from each value
# Optional, but to make the plot nicer:
df = as.data.frame(colData(rld)[, c("condition")]) # Create a dataframe with a column of the conditioncolnames(df) = "condition" # Rename the column header
rownames(df) = colnames(mat) # add rownames
# and plot the actual heatmap
pheatmap(mat, annotation_col=df)
res
ddsHTSeq <- DESeqDataSetFromHTSeqCount(sampleTable = sampleTable,
directory = directory,
design= ~ condition)
ddsHTSeq<- ddsHTSeq[-(1:1436), , drop = FALSE]
keep <- rowSums(counts(ddsHTSeq)) >= 10
ddsHTSeq <- ddsHTSeq[keep,]
ddsHTSeq
dds <- DESeq(ddsHTSeq)
res <- results(dds)
res
res<- res[which(abs(res$log2FoldChange)>2),]
res<- res[order(abs(res$log2FoldChange)),]
summary(res)
rld <- rlog(dds, blind=FALSE)
res<- match(res,row.names(rld))
res
res <- results(dds)
res
res<- res[which(abs(res$log2FoldChange)>2),]
res<- res[order(res$log2FoldChange),]
res <- results(dds)
res
res<- res[which(abs(res$log2FoldChange)>2),]
res
res<- res[order(abs(res$log2FoldChange)),]
res
res<- res[order(-abs(res$log2FoldChange)),]
res
rld <- rlog(dds, blind=FALSE)
mat =assay(rld)[ head(order(-abs(res$log2FoldChange)), 20),] # select the top 30 genes with the lowest padj
mat = mat - rowMeans(mat) # Subtract the row means from each value
# Optional, but to make the plot nicer:
df = as.data.frame(colData(rld)[, c("condition")]) # Create a dataframe with a column of the conditioncolnames(df) = "condition" # Rename the column header
rownames(df) = colnames(mat) # add rownames
# and plot the actual heatmap
pheatmap(mat, annotation_col=df)
mat =assay(rld)[ head(res), 20),] # select the top 30 genes with the lowest padj
mat =assay(rld)[ head(res, 20),] # select the top 30 genes with the lowest padj
res <- results(dds)
res
res <- results(dds)
res
#res<- res[which(abs(res$log2FoldChange)>2),]
res<- res[order(-abs(res$log2FoldChange)),]
res
rld <- rlog(dds, blind=FALSE)
mat =assay(rld)[ head(order(-abs(res$log2FoldChange)), 20),] # select the top 30 genes with the lowest padj
mat = mat - rowMeans(mat) # Subtract the row means from each value
# Optional, but to make the plot nicer:
df = as.data.frame(colData(rld)[, c("condition")]) # Create a dataframe with a column of the conditioncolnames(df) = "condition" # Rename the column header
rownames(df) = colnames(mat) # add rownames
# and plot the actual heatmap
pheatmap(mat, annotation_col=df)
mat
rld
mat =assay(rld)[ head(order(-res$log2FoldChange), 20),] # select the top 30 genes with the lowest padj
mat = mat - rowMeans(mat) # Subtract the row means from each value
# Optional, but to make the plot nicer:
df = as.data.frame(colData(rld)[, c("condition")]) # Create a dataframe with a column of the conditioncolnames(df) = "condition" # Rename the column header
rownames(df) = colnames(mat) # add rownames
# and plot the actual heatmap
pheatmap(mat, annotation_col=df)
# and plot the actual heatmap
pheatmap(mat, annotation_col=df)
select <- order(rowMeans(counts(dds,normalized=TRUE)),
decreasing=TRUE)[1:20]
df <- as.data.frame(colData(dds)[,c("condition","type")])
df <- as.data.frame(colData(dds)[,c("condition")])
pheatmap(assay(rld)[select,], cluster_rows=FALSE, show_rownames=FALSE,
cluster_cols=FALSE, annotation_col=df)
head(order(-res$log2FoldChange), 20)
assay(rld)
rld
res <- results(dds)
res
res<- res[which(abs(res$log2FoldChange)>2),]
res
res<- res[order(-abs(res$log2FoldChange)),]
res
rld <- rlog(dds, blind=FALSE)
rld
head(order(-res$log2pvalue), 20)
head(order(res$log2pvalue), 20)
head(order(res$pvalue), 20)
head(order(-res$log2FoldChange), 20)
head(order(res$log2FoldChange), 20)
tail(order(res$log2FoldChange), 20)
tail(order(-res$log2FoldChange), 20)
res <- results(dds)
res
rld <- rlog(dds, blind=FALSE)
mat =assay(rld)[ head(order(-res$log2FoldChange), 20),] # select the top 30 genes with the lowest padj
mat = mat - rowMeans(mat) # Subtract the row means from each value
# Optional, but to make the plot nicer:
df = as.data.frame(colData(rld)[, c("condition")]) # Create a dataframe with a column of the conditioncolnames(df) = "condition" # Rename the column header
rownames(df) = colnames(mat) # add rownames
# and plot the actual heatmap
pheatmap(mat, annotation_col=df)
mat =assay(rld)[ head(order(res$log2FoldChange), 20),] # select the top 30 genes with the lowest padj
mat = mat - rowMeans(mat) # Subtract the row means from each value
# Optional, but to make the plot nicer:
df = as.data.frame(colData(rld)[, c("condition")]) # Create a dataframe with a column of the conditioncolnames(df) = "condition" # Rename the column header
rownames(df) = colnames(mat) # add rownames
# and plot the actual heatmap
pheatmap(mat, annotation_col=df)
mat =assay(rld)[ head(order(-res$log2FoldChange), 25),] # select the top 30 genes with the lowest padj
mat = mat - rowMeans(mat) # Subtract the row means from each value
# Optional, but to make the plot nicer:
df = as.data.frame(colData(rld)[, c("condition")]) # Create a dataframe with a column of the conditioncolnames(df) = "condition" # Rename the column header
rownames(df) = colnames(mat) # add rownames
# and plot the actual heatmap
pheatmap(mat, annotation_col=df)
mat =assay(rld)[ head(order(-res$log2FoldChange), 25),] # select the top 30 genes with the lowest padj
mat = mat - rowMeans(mat) # Subtract the row means from each value
# and plot the actual heatmap
pheatmap(mat)
DESeq2Report(dds, project = "", intgroup, colors = NULL, res = NULL,
nBest = 500, nBestFeatures = 20, customCode = NULL,
outdir = "DESeq2Exploration", output = "DESeq2Exploration",
browse = interactive(), device = "png", template = NULL,
searchURL = "http://www.ncbi.nlm.nih.gov/gene/?term=", theme = NULL,
digits = 2, ...)
ddsHTSeq <- DESeqDataSetFromHTSeqCount(sampleTable = sampleTable,
directory = directory,
design= ~ condition)
#ddsHTSeq<- ddsHTSeq[-(1:1436), , drop = FALSE]
keep <- rowSums(counts(ddsHTSeq)) >= 10
ddsHTSeq <- ddsHTSeq[keep,]
ddsHTSeq
dds <- DESeq(ddsHTSeq)
res <- results(dds)
summary(res)
rld <- rlog(dds, blind=FALSE)
mat =assay(rld)[ head(order(-res$log2FoldChange), 25),] # select the top 30 genes with the lowest padj
mat = mat - rowMeans(mat) # Subtract the row means from each value
pheatmap(mat)
directory <- "C:/Users/Ismini/Documents/GitHub/Genome-Analysis-lab/Diff_ex/files"
sampleFiles<- list.files(directory)
sampleFiles
Files<- c("Serum_1", "Serum_2", "Serum_3","BH_1","BH_2","BH_3")
sampleCondition <- c("Serum_1", "Serum_2", "Serum_3","BH_1","BH_2","BH_3")
sampleTable <- data.frame(sampleName = Files,
fileName = sampleFiles,
condition = sampleCondition)
sampleTable
ddsHTSeq <- DESeqDataSetFromHTSeqCount(sampleTable = sampleTable,
directory = directory,
design= ~ condition)
ddsHTSeq<- ddsHTSeq[-(1:1436), , drop = FALSE]
keep <- rowSums(counts(ddsHTSeq)) >= 10
ddsHTSeq <- ddsHTSeq[keep,]
ddsHTSeq
dds <- DESeq(ddsHTSeq)
res <- results(dds)
#res<- res[which(abs(res$log2FoldChange)>2),]
#res<- res[order(-abs(res$log2FoldChange)),]
summary(res)
rld <- rlog(dds, blind=FALSE)
# DESeq2Report(dds, project = "", intgroup, colors = NULL, res = NULL,
#              nBest = 500, nBestFeatures = 20, customCode = NULL,
#              outdir = "DESeq2Exploration", output = "DESeq2Exploration",
#              browse = interactive(), device = "png", template = NULL,
#              searchURL = "http://www.ncbi.nlm.nih.gov/gene/?term=", theme = NULL,
#              digits = 2, ...)
mat =assay(rld)[ head(order(-res$log2FoldChange), 25),] # select the top 30 genes with the lowest padj
mat = mat - rowMeans(mat) # Subtract the row means from each value
pheatmap(mat)
pheatmap(mat, scale="column", col = heat.colors(256))
pheatmap(mat, col = heat.colors(256))
pheatmap(mat, col = topo.colors(256))
pheatmap(mat)
